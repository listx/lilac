all: test weave
.PHONY: all

test: tangle
	# FIXME: Add unit tests
.PHONY: test

weave: README.html
.PHONY: weave

README.html: README.org
	$(call run_emacs,(lilac-gen-css-and-exit),README.org)
	$(call run_emacs,(lilac-publish),README.org)
	# Fix inline styles.
	sed -i 's/<style>.csl-left-margin{float: left; padding-right: 0em/'\
	'<style>.csl-left-margin{float: left; padding-right: 1em/' README.html
	sed -i 's/.csl-right-inline{margin: 0 0 0 1em;}<\/style>/'\
	'.csl-right-inline{margin: 0 0 0 2em;}<\/style>/' README.html
# tangled_output are all files that are generated by tangling README.org.
tangled_output = \
	citations.bib \
	lilac.el \
	lilac.theme \
	.gitattributes \
	.gitignore \
	Makefile \
	misc.js \
	shell.nix \
	style.css \
	syntax-highlighting.css

tangle $(tangled_output) &: README.org
	# Generate the toplevel Makefile (this file) and others as described in
	# tangled_output. In a way this bootstraps the whole literate-programming
	# pipeline.
	$(call run_emacs,(org-babel-tangle),README.org)
	touch tangle
define run_emacs
	emacs $(2) --quick --batch --kill --load $(PROJ_ROOT)/lilac.el --eval="$(1)"
endef

PROJ_ROOT := $(shell git rev-parse --show-toplevel)
